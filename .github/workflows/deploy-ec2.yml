name: Deploy to EC2 with Docker & Ansible

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code
      - name: Checkout code
        uses: actions/checkout@v3

      # Step 2: Set up Python (Ansible requires Python)
      - name: Set up Python
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      # Step 3: Install Docker and Ansible
      - name: Install Docker & Ansible
        run: |
          sudo apt-get update
          sudo apt-get install -y ansible docker.io

      # Step 4: Docker Login to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      # Step 5: Build and push the backend Docker image
      - name: Build and push backend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecom-backend ./backend
          docker push ${{ secrets.DOCKER_USERNAME }}/ecom-backend

      # Step 6: Build and push the frontend Docker image
      - name: Build and push frontend Docker image
        run: |
          docker build -t ${{ secrets.DOCKER_USERNAME }}/ecom-frontend ./frontend
          docker push ${{ secrets.DOCKER_USERNAME }}/ecom-frontend

      # Step 7: Create Ansible inventory file for EC2 instance
      - name: Configure Ansible and Deploy to EC2
        run: |
          echo "[web]" > hosts
          echo "13.201.85.2 ansible_ssh_private_key_file=${{ secrets.EC2_SSH_KEY }} ansible_user=ec2-user ansible_ssh_extra_args='-o StrictHostKeyChecking=no'" >> hosts

      # Step 8: Run the Ansible playbook to deploy to EC2
      - name: Run Ansible playbook
        run: |
          ansible-playbook -i hosts ansible/deploy.yml
